1. 在 C++ 中， >> 有两个注意点：

n >> 31: 这是算术右移（arithmetic right shift）。对于有符号整数（比如 int），算术右移会保留符号位（最高位），即如果 n 是负数，移位时会用符号位（1）填充最高位；如果 n 是正数，则用 0 填充最高位。结果的符号与原数一致。

(uint_32) n >> 31: 则右移总是逻辑右移（logical right shift），用 0 填充高位，不保留符号位。

C++之中没有 >>>, java中这个运算符对应C++的`(uint_32) n >> 31`

2. 
